@{
    ViewData["Title"] = "Information of Training";
}
@model TrainGroup

<div class="page-header d-print-none">
    <div class="container-fluid">
        <div class="row g-2 align-items-center">
            <div class="col-6">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                    Full Details - Group Training
                    <h2 class="page-title">
                        Information of Training
                    </h2>
                </div>
            </div>
            <!-- Page title actions -->
            <div class="col-auto ms-auto d-print-none">


                @if (Model.TrainHead != null && (Model.TrainHead.Status != "Finished" || Model.TrainHead.Status == null))
                {
                    <button type="button" class="btn btn-warning btn_Sched" data-bs-toggle="modal" data-bs-target="#confirm-modal" data-ptid="@Model.TrainHead.PTId" data-ttid="@Model.TrainHead.TTId">
                        Finish Training
                    </button>
                }
            </div>

        </div>

    </div>
</div>




<div class="page-body">
    <div class="container-fluid">


        @using (Html.BeginForm("FinishSchedule", "Group", FormMethod.Post, new { id = "form-finisher" }))
        {
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Schedule</h3>
                </div>
                <div id="table-default">
                    <div class="row px-4 pt-4 align-items-center">
                        <div class="col- d-lg-flex px-3 pt-3">

                            <div class="d-flex text-center text-lg-start mb-3">
                                <div class="text-muted">
                                    Show
                                    <div class="mx-2 d-inline-block w-25">
                                        <input id="entries" type="number" class="form-control" value="10" autocomplete="off">
                                    </div>
                                    entries
                                </div>

                            </div>

                            <div class="input-icon mb-3 ms-auto">
                                <input type="search" class="search form-control" placeholder="Search">
                                <span class="input-icon-addon">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" /><path d="M21 21l-6 -6" /></svg>
                                </span>

                            </div>
                        </div>

                    </div>
                    <hr class="m-0">
                    <div class="table-responsive px-4 pb-4">
                        <table class="table text-muted table-mobile-sm" id="datatable" data-filename="Transfer Report">
                            <thead class="table-thead">
                                <tr>
                                    <th><button type="button" class="table-sort" data-sort="sort-ID">Schedule ID</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Title">Training Title</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Scheduled">Scheduled Date</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Location">Location</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Trainor">Trainor</button></th>

                                </tr>
                            </thead>
                            <tbody class="table-tbody">
                                @if (!Model.trainHead.Any())
                                {
                                    <tr>
                                        <td colspan="5" class="text-center text-muted">No data available</td>
                                    </tr>
                                }
                                else
                                {
                                    
                                @foreach (var row in Model.trainHead)
                                {

                                    <tr>

                                        <td data-label="Schedule Id" class="text-nowrap sort-ID">
                                            <a style="text-decoration: none; color: inherit;">@row.TTId</a>
                                        </td>

                                        <td data-label="Training Title" class="text-nowrap sort-Title">
                                            <a style="text-decoration: none; color: inherit;">@row.title</a>
                                        </td>

                                        <td data-label="Scheduled Date" class="text-nowrap sort-Scheduled">
                                            <a data-bs-toggle="modal" data-bs-target="#ModalResched" style="text-decoration: none; color: inherit;">@row.SchedDate</a>
                                        </td>

                                        <td data-label="Location" class="text-nowrap sort-Location">
                                            <a style="text-decoration: none; color: inherit;">@row.Location</a>
                                        </td>

                                        <td data-label="Trainor" class="text-nowrap sort-Trainor">
                                            <a style="text-decoration: none; color: inherit;">@row.Trainor</a>
                                        </td>

                                        @* 
                                            @if (@row.Status != "Finished")
                                            {
                                            <button type="button" class="btn btn-outline-warning btn_Sched" data-bs-toggle="modal" data-bs-target="#confirm-modal" data-ptid="@row.PTId" data-ttid="@row.TTId">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-calendar-bolt">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                            <path d="M13.5 21h-7.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
                                            <path d="M16 3v4" />
                                            <path d="M8 3v4" />
                                            <path d="M4 11h16" />
                                            <path d="M19 16l-2 3h4l-2 3" />
                                            </svg>
                                            </button>
                                            }
                                         *@




                                    </tr>
                                }
                                }

                            </tbody>
                        </table>
                    </div>
                    <div class="card-footer d-flex align-items-center">
                        <ul class="pagination m-0 ms-auto"></ul>
                    </div>
                </div>
            </div>



            <div class="card mt-4">
                <div class="card-header">
                    <h3 class="card-title">Employee List</h3>

                    <div class="col-auto ms-auto d-print-none">


                        @if (Model.TrainHead != null && (Model.TrainHead.Status != "Finished" || Model.TrainHead.Status == null))
                        {
                            <button type="button" class="btn btn-purple btn_Attendee" data-bs-toggle="modal" data-bs-target="#ModalAddAttendee" data-atid="@Model.TrainHead.PTId">
                                Add More Attendee
                            </button>
                        }

                    </div>

                </div>
                <div id="table-default1">
                    <div class="col- d-lg-flex px-3 pt-3">

                        <div class="d-flex text-center text-lg-start mb-3">
                            <div class="text-muted">
                                Show
                                <div class="mx-2 d-inline-block w-25">
                                    <input id="entries1" type="number" class="form-control" value="10" autocomplete="off">
                                </div>
                                entries
                            </div>

                        </div>

                        <div class="input-icon mb-3 ms-auto">
                            <input type="search1" class="search form-control" placeholder="Search">
                            <span class="input-icon-addon">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" /><path d="M21 21l-6 -6" /></svg>
                            </span>

                        </div>
                    </div>
                    <hr class="m-0">
                    <div class="table-responsive px-4 pb-4">
                        <table class="table text-muted table-mobile-sm" id="datatable1">
                            <thead class="table-thead1">
                                <tr>
                                    @if (Model.TrainHead != null && (Model.TrainHead.Status != "Finished" || Model.TrainHead.Status != "Ongoing"))
                                    {
                                        <th>*</th>
                                    }
                                    <th><button type="button" class="table-sort" data-sort="sort-EmpID">Employee ID</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Name">Full Name</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Department">Department</button></th>
                                    <th><button type="button" class="table-sort" data-sort="sort-Position">Position</button></th>
                                    @if(Model.TrainHead != null && (Model.TrainHead.Status != "Finished" || Model.TrainHead.Status != "Ongoing"))
                                    {
                                        <th>Action</th>
                                        <th>Upload file</th>
                                    }
                                    <th>Download file</th>
                                </tr>
                            </thead>
                            <tbody class="table-tbody1">
                                @if (!Model.AttendeeDetails.Any())
                                {
                                    <tr>
                                        <td colspan="7" class="text-center text-muted">No data available</td>
                                    </tr>
                                }
                                else{
                                    
                                    @for (int i = 0; i < Model.AttendeeDetails.Count(); i++)
                                {
                                    <tr>

                                        @Html.HiddenFor(m => m.AttendeeDetails[i].TTId)
                                        @if (Model.TrainHead != null && (Model.TrainHead.Status != "Finished" && Model.TrainHead.Status != "Ongoing"))
                                        {
                                            <td class="text-nowrap" data-label="*">
                                                <label class="form-check">

                                                    <input type="checkbox" data-index="@i" id="checkbox-@i" class="form-check-input" asp-for="@Model.AttendeeDetails[i].IsFinished" checked />
                                                </label>
                                            </td>
                                        }
                                        @if (Model.TrainHead != null && Model.TrainHead.Status == "Finished")
                                        {
                                            <td class="text-nowrap" data-label="*">
                                                <label class="form-check">

                                                    <input type="checkbox" data-index="@i" id="checkbox-@i" class="form-check-input" asp-for="@Model.AttendeeDetails[i].IsFinished" />
                                                </label>
                                            </td>
                                        }


                                        <td data-label="Employee ID" class="text-nowrap sort-EmpID">
                                            <input type="hidden" name="AttendeeDetails[@i].EmpId" value="@Model.AttendeeDetails[i].EmpId" />
                                            @Model.AttendeeDetails[i].EmpId
                                        </td>
                                        <td data-label="Full Name" class="text-nowrap sort-Name">
                                            <input type="hidden" name="AttendeeDetails[@i].fullName" value="@Model.AttendeeDetails[i].fullName" />
                                            @Model.AttendeeDetails[i].fullName
                                        </td>
                                        <td data-label="Department" class="text-nowrap sort-Department">
                                            <input type="hidden" name="AttendeeDetails[@i].department" value="@Model.AttendeeDetails[i].position" />
                                            @Model.AttendeeDetails[i].department
                                        </td>
                                        <td data-label="Position" class="text-nowrap sort-Position">
                                            <input type="hidden" name="AttendeeDetails[@i].position" value="@Model.AttendeeDetails[i].department" />
                                            @Model.AttendeeDetails[i].position
                                        </td>

                                        @if (Model.TrainHead != null && Model.TrainHead.Status != "Finished")
                                        {
                                            <td>
                                                <button type="button" data-bs-toggle="modal" data-bs-target="#removeModal" class="btn btn-danger btnRemove" data-empid="@Model.AttendeeDetails[i].EmpId" data-taid="@Model.AttendeeDetails[i].TAId">Remove</button>
                                            </td>
                                        }
                                        @if (@Model.AttendeeDetails[i].IsWritten != true && @Model.AttendeeDetails[i].IsFinished == true && @Model.AttendeeDetails[i].EXamId != 0)
                                        {
                                            <td data-label="EVAL">
                                                <a href="/Question/PracticalTest/@Model.AttendeeDetails[i].TEId/@Model.AttendeeDetails[i].EXamId/@Model.AttendeeDetails[i].EmpId" class="btn btn-outline-primary btn_generate">
                                                    Evaluate
                                                </a>
                                                @if (@Model.AttendeeDetails[i].IsWritten == false && @Model.AttendeeDetails.Any() && @Model.AttendeeDetails[i].EXamId != 0)
                                                {
                                             
                                                    <a href="/Group/ViewEvaluation/@Model.AttendeeDetails[i].TEId/@Model.AttendeeDetails[i].EmpId" type=" button" class="btn btn-outline-warning btn_ViewAns">
                                                        View Evaluation
                                                    </a>
                                               
                                                }
                                            </td>

                                        }


                                        @if (@Model.AttendeeDetails[i].IsWritten != false && @Model.AttendeeDetails[i].IsFinished == true && @Model.AttendeeDetails[i].EXamId != 0)
                                        {
                                            <td data-label="View Answer">
                                                <a href="/Group/ViewAnswers/@Model.AttendeeDetails[i].TEId/@Model.AttendeeDetails[i].EmpId" type=" button" class="btn btn-outline-warning btn_ViewAns">
                                                    View Answer
                                                </a>
                                            </td>

                                            <td data-label="Upload">
                                                <button type="button" class="btn btn-outline-primary btnUpload"
                                                        data-bs-toggle="modal" data-bs-target="#uploadModal"
                                                        data-pmid="@Model.PMId" data-ttid="@Model.TrainHead.TTId"
                                                        data-ptid="@Model.PTId" data-empid="@Model.AttendeeDetails[i].EmpId">
                                                    Upload
                                                </button>
                                            </td>
                                        }


                                        @if (Model.attachments.Any())
                                        {
                                            <td data-label="Download">
                                                <!-- View PDF Button -->
                                                <button type="button" class="btn btn-outline-secondary btnViewPdf"
                                                        data-pmid="@Model.PMId"
                                                        data-ttid="@Model.TrainHead.TTId"
                                                        data-ptid="@Model.PTId"
                                                        data-empid="@Model.AttendeeDetails[i].EmpId"
                                                        data-bs-toggle="modal" data-bs-target="#attachmentModal"
                                                        onclick="loadAttachmentModal(this)">
                                                    Check Upload
                                                </button>
                                            </td>
                                        }



                                    </tr>
                                }
                                }
                                
                            </tbody>
                        </table>
                    </div>

                    <div class="card-footer d-flex align-items-center">
                        <ul class="pagination m-0 ms-auto"></ul>
                    </div>

                </div>
            </div>

            @Html.HiddenFor(m => m.TrainHead.TTId, new { @id = "TTId" })
            @Html.HiddenFor(m => m.PTId, new { @id = "PTId" })
            @Html.HiddenFor(m => m.PMId, new { @id = "PMId" })

        }
    </div>
</div>



@using (Html.BeginForm("UploadFile", "Group", FormMethod.Post, new { id = "form-upload-file", enctype = "multipart/form-data" }))
{
    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadModalLabel">Upload Attachment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Hidden Fields to hold data for EmpId, PMId, TTId, PTId -->
                @Html.HiddenFor(m => m.TTId, new { @id = "forTTId" })
                @Html.HiddenFor(m => m.PTId, new { @id = "forPTId" })
                @Html.HiddenFor(m => m.PMId, new { @id = "forPMId" })
                @Html.HiddenFor(m => m.EmpId, new { @id = "forEmpId" })

                <div class="modal-body">
                    <div class="upload-section">
                        <div class="mb-3">
                            <input type="file" class="form-control" asp-for="Attachment" style="font-size: 0.9rem; padding: 0.375rem 0.75rem;" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btnUploads btn btn-primary">Upload</button>
                </div>
            </div>
        </div>
    </div>
}


<div class="modal fade" id="attachmentModal" tabindex="-1" aria-labelledby="attachmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            
        </div>
    </div>
</div>


<!-- Modal for displaying QR code -->
<div class="modal fade" id="ModalQR" tabindex="-1" aria-labelledby="ModalQRLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalQRLabel">QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex flex-column align-items-center justify-content-center text-center">
                <img id="qr-code-image" src="" alt="QR Code" class="img-fluid mb-2" />
                <p id="qr-code-link"></p>
            </div>
        </div>
    </div>
</div>

@*Modal for Attendees*@
@using (Html.BeginForm("AddAttendee", "Group", FormMethod.Post, new { id = "form-add-attendee" }))
{
    <div class="modal modal-blur fade" id="ModalAddAttendee" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-status bg-primary"></div>
                <div class="modal-body text-center py-4">
                    <h3>SELECT ATTENDEE/S</h3>
                    <div class="input-group d-flex flex-column flex-md-row align-items-center">
                        <div class="col mb-3">

                            <div class="d-flex align-items-center">
                                <label class="form-label mb-3 me-2">Attendee/s:</label>
                                <div class="select-button-container col mb-3">
                                    <select name="attendee[]" id="AttendeeDetails" class="form-select tom-select-subtitle2 fixed-width-select" multiple>
                                        <option selected disabled></option>
                                        @foreach (var item in Model.scheduleMaster)
                                        {
                                            <option value="@item.employee_id"
                                                    data-subtitle="@item.employee_id"
                                                    data-subtitle2="@item.department"
                                                    data-post="@item.position_title"
                                                    data-fullname="@item.full_name"
                                                    data-tid="@item.TId">
                                                @item.full_name
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.HiddenFor(m => m.TrainHead.PTId, new { @id = "APTId" })
                <div class="modal-footer">
                    <div class="w-100">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn w-100" data-bs-dismiss="modal">
                                    Cancel
                                </button>
                            </div>
                            <div class="col">
                                <button class="btnAddAttendee btn btn-success w-100">
                                    Add Attendee
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



<!-- Modal for Resched -->
@using (Html.BeginForm("Reschedule", "Group", FormMethod.Post, new { id = "form-Reschedule" }))
{
    <div class="modal modal-blur fade" id="ModalResched" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-status bg-primary"></div>
                <div class="modal-body text-center py-4">
                    <h3>Set Reschedule Date</h3>
                    <div class="input-group d-flex flex-column flex-md-row align-items-center">
                        <div class="col mb-3">

                            <div class="col mb-3">
                                <label class="form-label">Select Schedule Date</label>
                                <input type="text" id="scheduleDate2" class="form-control date-input">
                            </div>

                            <div class="col mb-3">
                                <label class="form-label">Select Schedule Time</label>
                                <input type="time" id="scheduleTime2" class="form-control">
                            </div>

                            <div class="col mb-3">
                                <label class="form-label">Scheduled Date and Time</label>
                                @Html.TextBoxFor(m => m.TrainHead.SchedDate, new { @class = "form-control", @required = "required", @id = "combinedDateTime2", @readonly = "True" })
                            </div>


                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="w-100">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn w-100" data-bs-dismiss="modal">
                                    Cancel
                                </button>
                            </div>
                            <div class="col">
                                <button class="btnAddResched btn btn-success w-100">
                                    Save Reschedule
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<!--REMOVE MODAL-->
@using (Html.BeginForm("RemoveAttendee", "Group", FormMethod.Post, new { id = "form-remove-attendee" }))
{

    <div class="modal fade" id="removeModal" tabindex="-1" aria-labelledby="removeModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="removeModalLabel">Confirm Removal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                @Html.HiddenFor(m => m.TAId, new { @id = "TAId" })
                <div class="modal-body">
                    Are you sure you want to remove this attendee?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmRemoveBtn">Remove</button>
                </div>
            </div>
        </div>
    </div>

}



@section Scripts
{
    <script>

        $(".btn_Attendee").click(function () {

            const atid = $(this).data("atid")
            $("#APTId").val(atid)
        })


        function loadAttachmentModal(button) {
            var ttid = $(button).data('ttid');
            var ptid = $(button).data('ptid');
            var pmid = $(button).data('pmid');
            var empid = $(button).data('empid');

            // Make an AJAX call to load the partial view
            $.ajax({
                url: '@Url.Action("GetAttachmentModal", "Group")', // Replace 'YourController' with the actual controller name
                type: 'GET',
                data: { TTId: ttid, PTId: ptid, PMId: pmid, EmpId: empid },
                success: function (data) {
                    // Replace the modal content with the new content
                    $('#attachmentModal .modal-content').html(data);
                    $('#attachmentModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("There was an error loading the attachments: ", error);
                }
            });
        }

        $(document).ready(function () {
            $(".btnUpload").click(function () {
                const empid = $(this).data("empid");
                const pmid = $(this).data("pmid");
                const ttid = $(this).data("ttid");
                const ptid = $(this).data("ptid");

                // Debugging to check if the values are correct
                console.log("EmpId: " + empid);
                console.log("PMId: " + pmid);
                console.log("TTId: " + ttid);
                console.log("PTId: " + ptid);

                // Populate hidden input fields with the data attributes
                $("#forEmpId").val(empid);
                $("#forPMId").val(pmid);
                $("#forTTId").val(ttid); // Corrected TTId to use the ttid variable
                $("#forPTId").val(ptid); // Corrected PTId to use the ptid variable
            });
        });
        $(".btnRemove").click(function () {

            const taid = $(this).data("taid")
            $("#TAId").val(taid)
        })

        // Table 2 (Employee List)
        var columns2 = [];
        $(".table-thead1").find(".table-sort").each(function () {
            columns2.push($(this).data("sort"));
        });

        const list2 = new List('table-default1', {
            sortClass: 'table-sort',
            listClass: 'table-tbody1',
            page: 10,
            pagination: true,
            valueNames: columns2
        });

        $("#entries1").change(function () {
            list2.page = $(this).val();
            list2.update();
        });



        


        function generateQRCode(button) {
            // Retrieve the data attributes from the clicked button
            const Id = button.getAttribute('data-examid');
            const TEId = button.getAttribute('data-teid');
            const EmployeeId = button.getAttribute('data-empid');

            // Ensure ExamId and TEId are available
            if (!Id || !TEId) {
                console.error('ExamId or TEId is missing');
                return;
            }

            // Construct the base URL
            const baseUrl = window.location.origin;
            let url;


            url = `${baseUrl}/Question/PracticalTest/${TEId}/${Id}/${EmployeeId}`;


            console.log(`Generated URL: ${url}`); // Debugging log

            // Generate the QR code URL
            const qrCodeUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(url)}`;

            // Set the QR code image in the modal
            document.getElementById('qr-code-image').src = qrCodeUrl;

            // Set the text content of the paragraph to display the URL
            document.getElementById('qr-code-link').textContent = url;
        }




        $(document).ready(function () {
            // Attach change event handlers to the date and time inputs
            $('#scheduleDate2, #scheduleTime2').on('change', function () {
                // Get the selected date and time values
                var selectedDate = $('#scheduleDate2').val();
                var selectedTime = $('#scheduleTime2').val();

                // Check if both date and time are selected
                if (selectedDate && selectedTime) {
                    // Combine date and time into a single datetime string
                    var combinedDateTime = selectedDate + ' ' + selectedTime;
                    // Update the readonly input with the combined value
                    $('#combinedDateTime2').val(combinedDateTime);
                }
            });
        });


        $(".btn_Sched").click(function () {
            const ttid = $(this).data("ttid")

            $("#confirm-title").html("Finished Training")
            $("#confirm-message").html("Are you sure you want to end this schedule?")
            $("#confirm-modal").modal("show")
            $("#confirm-yes").click(function () {
                $("TTId").val(ttid)

                $("#form-finisher").submit()
            })

        })

    </script>


}