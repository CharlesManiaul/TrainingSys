@{
    ViewData["Title"] = "Exam Details";

}
@model Exam


<div class="page-header d-print-none">
    <div class="container-fluid">
        <div class="row g-2 align-items-center">
            <div class="col-6">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                    Details - Exam Master
                    <h2 class="page-title">
                        Examination Details
                    </h2>
                </div>
            </div>

            <!-- Page title actions -->
            <div class="col-auto ms-auto d-print-none">
                @if (Model.Status == "Open" || Model.Status == "For revision")
                {
                    <!-- Finalized Button -->
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ModalFinal">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle-check" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M9 12l2 2l4 -4" />
                            <path d="M12 20a8 8 0 1 0 0 -16a8 8 0 0 0 0 16z" />
                        </svg>
                        Finalized
                    </button>
                }

                @if (Model.Status == "Finalized")
                {
                    <!-- Revise Button -->
                    <button type="button" class="btn btn-rss" data-bs-toggle="modal" data-bs-target="#ModalRevise">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-edit" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M16 3.13a2.5 2.5 0 0 1 3.37 3.37l-9.37 9.37l-4 1l1 -4l9.37 -9.37z" />
                            <path d="M12.5 5.5l4 4" />
                        </svg>
                        Revise
                    </button>
                }

                @if (Model.Status != "Finalized" && Model.Revision == 0)
                {
                    <!-- Update Button -->
                    <button type="button" class="btn btn-success" id="btnEditExam">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-reload" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1 7.935 1.007 9.425 4.747" />
                            <path d="M20 4v5h-5" />
                        </svg>
                        Update
                    </button>
                }

                @if (Model.Status != "Finalized")
                {
                    @if (Model.IsWritten == false)
                    {
                        <!-- Different Modal Button for IsWritten = 0 -->
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#modal-PracQuestion">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-help"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" /><path d="M12 17l0 .01" /><path d="M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4" /></svg>
                            Practical Question
                        </button>
                    }
                    else
                    {
                        <!-- Original Modal Button -->
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#modal-Question">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-help"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" /><path d="M12 17l0 .01" /><path d="M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4" /></svg>
                            Question
                        </button>
                    }
                }
            </div>
        </div>

    </div>
</div>

<div class="page-body">
    <div class="container-fluid">
        <div class="card">

            @using (Html.BeginForm("EditExam", "Question", FormMethod.Post, new { id = "form-Edit-Exam" }))
            {
                <div class="card-header">
                    @Html.HiddenFor(m => m.Id)

                    <div class="row mb-3">
                        <div class="col-md-6 col-lg-6 mb-3">
                            <label class="form-label">Title</label>
                            @Html.TextBoxFor(m => m.Title, new { @type = "text", @class = "form-control", @readonly = Model.Revision != 0 ? "readonly" : null })
                        </div>

                        <div class="col-md-6 col-lg-6 mb-3" id="passingScoreDiv">
                            <label class="form-label">Passing Score(%)</label>

                            @Html.TextBoxFor(m => m.PassingScore, new { @type = "number", @class = "form-control", @id = "passingScore" })
                        </div>

                     


                        <div class="mb-3">
                            <label class="form-label">Type of Training</label>
                            <div class="form-selectgroup-boxes row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-selectgroup-item">
                                        @if (Model.Revision != 0)
                                        {
                                            <input type="radio" asp-for="IsWritten" value="True" class="form-selectgroup-input" id="isWritten" disabled="disabled" />
                                        }
                                        else
                                        {
                                            <input type="radio" asp-for="IsWritten" value="True" class="form-selectgroup-input" id="isWritten" />
                                        }
                                        <span class="form-selectgroup-label d-flex align-items-center p-3">
                                            <span class="me-3">
                                                <span class="form-selectgroup-check"></span>
                                            </span>
                                            <span class="form-selectgroup-label-content">
                                                <span class="form-selectgroup-title strong mb-1">Written</span>
                                            </span>
                                        </span>
                                    </label>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-selectgroup-item">
                                        @if (Model.Revision != 0)
                                        {
                                            <input type="radio" asp-for="IsWritten" value="False" class="form-selectgroup-input" id="isPractical" disabled="disabled" />
                                        }
                                        else
                                        {
                                            <input type="radio" asp-for="IsWritten" value="False" class="form-selectgroup-input" id="isPractical" />
                                        }
                                        <span class="form-selectgroup-label d-flex align-items-center p-3">
                                            <span class="me-3">
                                                <span class="form-selectgroup-check"></span>
                                            </span>
                                            <span class="form-selectgroup-label-content">
                                                <span class="form-selectgroup-title strong mb-1">Practical</span>
                                            </span>
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            }


            @if (Model.IsWritten == true)

            {
                <div class="card-body">

                    <div class="row g-2 align-items-center">
                        <div class="col-6">

                            <h3>Questions</h3>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table text-muted table-mobile-sm">
                            <thead class="table-thead">
                                <tr>
                                    <th><button class="table-sort" data-sort="sort-Type">Type</button></th>
                                    <th><button class="table-sort" data-sort="sort-ItemNo">Item Number</button></th>
                                    <th><button class="table-sort" data-sort="sort-Question">Question</button></th>
                                    <th><button class="table-sort" data-sort="sort-Choice_A">Choice A</button></th>
                                    <th><button class="table-sort" data-sort="sort-Choice_B">Choice B</button></th>
                                    <th><button class="table-sort" data-sort="sort-Choice_C">Choice C</button></th>
                                    <th><button class="table-sort" data-sort="sort-Choice_D">Choice D</button></th>
                                    <th><button class="table-sort" data-sort="sort-Answer">Answer</button></th>
                                    @if (Model.Status != "Finalized")
                                    {
                                        <th>ACTION</th>
                                    }

                                </tr>
                            </thead>
                            <tbody class="table-tbody">
                                @foreach (var items in Model.examDetails)
                                {

                                    <tr class="editQuestion"
                                        data-bs-toggle="modal" data-bs-target="#modal-EditQuestion"
                                        data-wid="@items.Id"
                                        data-tid="@items.ExamId"
                                        data-ino="@items.ItemNo"
                                        data-quest="@items.Question"
                                        data-ca="@items.choiceA"
                                        data-cb="@items.choiceB"
                                        data-cc="@items.choiceC"
                                        data-cd="@items.choiceD"
                                        data-ans="@items.Answer"
                                        data-eanswer="@items.EnumarationAnswer"
                                        data-tanswer="@items.TrueFalseAnswer"
                                        data-canswer="@items.ChoiceAnswer"
                                        data-type="@items.Type"
                                        data-subid="@items.SubId">

                                        @Html.HiddenFor(m => items.Id)

                                        <td data-label="Type" class="text-nowrap sort-Question">
                                            <a>@items.Type</a>
                                        </td>


                                        <td data-label="Item Number" class="text-nowrap sort-ItemNo">
                                            <a>@items.ItemNo</a>
                                        </td>

                                        <td data-label="Question" class="text-nowrap sort-Question">
                                            <a>@items.Question</a>
                                        </td>

                                        <td data-label="Choice A" class="text-nowrap sort-Choice_A">
                                            <a>@items.choiceA</a>
                                        </td>

                                        <td data-label="Choice B" class="text-nowrap sort-Choice_B">
                                            <a>@items.choiceB</a>
                                        </td>

                                        <td data-label="Choice C" class="text-nowrap sort-Choice_C">
                                            <a>@items.choiceC</a>
                                        </td>

                                        <td data-label="Choice D" class="text-nowrap sort-Choice_D">
                                            <a>@items.choiceD</a>
                                        </td>

                                        <td data-label="Answer" class="text-nowrap sort-Answer">
                                            <a>@items.Answer</a>
                                        </td>
                                        @if (Model.Status != "Finalized")
                                        {
                                            <td>
                                                <button type="button" class="btn btn-icon btn-outline-danger btn_delete" data-bs-toggle="modal" data-bs-target="#ModalDelete" data-wid="@items.ExamId">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                                                </button>
                                            </td>
                                        }


                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
            }

            @if (Model.IsWritten != true)
            {

                <div class="card-body">

                    <div class="row g-2 align-items-center">
                        <div class="col-6">

                            <h3>Questions</h3>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table text-muted table-mobile-sm">
                            <thead class="table-thead">
                                <tr>
                                    <th><button class="table-sort" data-sort="sort-ItemNo">Item Number</button></th>
                                    <th><button class="table-sort" data-sort="sort-Question">Question</button></th>
                                    @if (Model.Status != "Finalized")
                                    {
                                        <th>ACTION</th>
                                    }

                                </tr>
                            </thead>
                            <tbody class="table-tbody">
                                @foreach (var items in Model.examDetails)
                                {

                                    <tr class="editQuestion"
                                        data-bs-toggle="modal" data-bs-target="#modal-EditQuestion"
                                        data-wid="@items.Id"
                                        data-tid="@items.ExamId"
                                        data-ptid="@items.PracId"
                                        data-ino="@items.ItemNo"
                                        data-quest="@items.Question">

                                        @Html.HiddenFor(m => items.Id)

                                        <td data-label="Item Number" class="text-nowrap sort-ItemNo">
                                            <a>@items.ItemNo</a>
                                        </td>

                                        <td data-label="Question" class="text-nowrap sort-Question">
                                            <a>@items.Question</a>
                                        </td>

                                        @if (Model.Status != "Finalized")
                                        {
                                            <td>
                                                <button type="button" class="btn btn-icon btn-outline-danger btn_delete" data-bs-toggle="modal" data-bs-target="#ModalDelete" data-wid="@items.ExamId">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                                                </button>
                                            </td>
                                        }


                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>



                </div>


            }


        </div>
    </div>
</div>



@*MODAL ADD QUESTIONS*@

@using (Html.BeginForm("SaveQuestion", "Question", FormMethod.Post, new { id = "form-Add-Question" }))
{
    <div class="modal modal-blur fade" id="modal-Question" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">ENTER QUESTION</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="row g-2 align-items-center">
                        <div class="col-6">
                            <h3>Fill Up Information</h3>
                        </div>
                    </div>


                    <div class="mb-3">

                        <label class="form-label">Number:</label>
                        @Html.TextBoxFor(m => m.ExamDetails.ItemNo, new { @type = "number", @class = "form-control" })

                    </div>


                    <div class="mb-3">
                        <label class="form-label">Question:</label>
                        @Html.TextAreaFor(m => m.ExamDetails.Question, new { @type = "text", @class = "form-control", @rows = "6" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Type of Examination:</label>
                        <select id="subTypeSelector" asp-for="ExamDetails.SubType" class="form-control tom-select">
                            <option value="" selected disabled>Select Type of Question</option>
                            @foreach (var items in Model.SubTypes)
                            {
                                <option value="@items.SubId">@items.Type</option>
                            }
                        </select>
                    </div>

                    <!-- Enumaration -->
                    <div id="enumarationSection" class="mb-3" style="display: none;">
                        <label>Answer: </label>
                        @Html.TextAreaFor(m => m.ExamDetails.EnumarationAnswer, new { @class = "form-control", @data_bs_toggle = "autosize" })
                    </div>

                    <!-- Enumaration -->
                    <div id="identificationSection" class="mb-3" style="display: none;">
                        <label>Answer: </label>
                        @Html.TextAreaFor(m => m.ExamDetails.IdentificationAnswer, new { @class = "form-control", @data_bs_toggle = "autosize" })
                    </div>

                    <!-- True or False -->
                    <div id="trueFalseSection" class="mb-3" style="display: none;">
                        <label class="form-label">Answer:</label>
                        <div class="input-group">
                            <select asp-for="ExamDetails.TrueFalseAnswer" class="form-select tom-select">
                                <option value="" selected disabled>Select Answer</option>
                                <option value="tama">True</option>
                                <option value="mali">False</option>
                            </select>
                        </div>
                    </div>

                    <!-- Choices -->
                    <div id="choicesSection" class="mb-3" style="display: none;">
                        <label class="form-label">Choices:</label>
                        <div class="mb-2">
                            <div class="input-group">
                                <span class="input-group-text">A:</span>
                                @Html.TextBoxFor(m => m.ExamDetails.choiceA, new { @type = "text", @class = "form-control" })
                            </div>
                        </div>
                        <div class="mb-2">
                            <div class="input-group">
                                <span class="input-group-text">B:</span>
                                @Html.TextBoxFor(m => m.ExamDetails.choiceB, new { @type = "text", @class = "form-control" })
                            </div>
                        </div>
                        <div class="mb-2">
                            <div class="input-group">
                                <span class="input-group-text">C:</span>
                                @Html.TextBoxFor(m => m.ExamDetails.choiceC, new { @type = "text", @class = "form-control" })
                            </div>
                        </div>
                        <div class="mb-2">
                            <div class="input-group">
                                <span class="input-group-text">D:</span>
                                @Html.TextBoxFor(m => m.ExamDetails.choiceD, new { @type = "text", @class = "form-control" })
                            </div>
                        </div>
                        <div class="mb-2">
                            <div class="input-group">
                                <span class="input-group-text">Answer:</span>
                                <select asp-for="ExamDetails.ChoiceAnswer" class="form-control">
                                    <option></option>
                                    <option value="A">A</option>
                                    <option value="B">B</option>
                                    <option value="C">C</option>
                                    <option value="D">D</option>
                                </select>
                            </div>
                        </div>
                    </div>



                </div>

                @Html.HiddenFor(m => m.ExamDetails.Id, new { @id = "edi" })

                <div class="modal-footer">
                    <button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
                    <a class="btn btn-success" id="btnQuestionSave" data-did="@Model.Id">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M5 12l5 5l10 -10" /></svg>
                        Save
                    </a>
                </div>
            </div>
        </div>
    </div>
}


@*MODAL Edit QUESTIONS*@
@using (Html.BeginForm("EditQuestion", "Question", FormMethod.Post, new { id = "form-Edit-Question" }))
{
    <div class="modal modal-blur fade" id="modal-EditQuestion" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">EDIT QUESTION</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h3 class="mb-3">Edit Information</h3>

                    @Html.HiddenFor(m => m.ExamDetails.Id, new { id = "view_ID" })
                    @Html.HiddenFor(m => m.ExamDetails.ExamId, new { id = "view_EID" })
                    @Html.HiddenFor(m => m.IsWritten)
                    @Html.HiddenFor(m => m.IsPractical)
                    @Html.HiddenFor(m => m.ExamDetails.PracId, new { id = "view_PEID" })


                    <div class="mb-3">
                        <label class="form-label">Number:</label>
                        @Html.TextBoxFor(m => m.ExamDetails.ItemNo, new { @type = "number", @class = "form-control", id = "view_INo" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Question:</label>
                        @Html.TextAreaFor(m => m.ExamDetails.Question, new { @class = "form-control", @rows = "3", id = "view_Quest" })
                    </div>

                    @if (Model.IsWritten == true) 
                    {  
                        
                    <div class="mb-3">
                        <label class="form-label">Type of Examination:</label>
                        <select id="u_subTypeSelector" asp-for="ExamDetails.SubType" class="form-control">
                            <option value="" selected disabled>Select Type of Question</option>
                            @foreach (var item in Model.SubTypes)
                            {
                                <option value="@item.SubId">@item.Type</option>
                            }
                        </select>
                    </div>

                        <!-- Sections dynamically controlled -->
                        <div id="u_enumarationSection" class="mb-3" style="display: none;">
                            <label>Answer:</label>
                            @Html.TextAreaFor(m => m.ExamDetails.EnumarationAnswer, new { @class = "form-control", id = "view_eAnswer" })
                        </div>

                        <!-- Enumaration -->
                        <div id="u_identificationSection" class="mb-3" style="display: none;">
                            <label>Answer: </label>
                            @Html.TextAreaFor(m => m.ExamDetails.IdentificationAnswer, new { @class = "form-control", id = "view_iAnswer" })
                        </div>


                            <div id="u_trueFalseSection" class="mb-3" style="display: none;">
                                <label class="form-label">Answer:</label>
                                <select asp-for="ExamDetails.TrueFalseAnswer" class="form-select" id="view_tAnswer">
                                    <option value="" selected disabled>Select Answer</option>
                                    <option value="tama">True</option>
                                    <option value="mali">False</option>
                                </select>
                            </div>

                                <div id="u_choicesSection" class="mb-3" style="display: none;">
                                    <label class="form-label">Choices:</label>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text">A:</span>
                                        @Html.TextBoxFor(m => m.ExamDetails.choiceA, new { @class = "form-control", id = "view_cA" })
                                    </div>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text">B:</span>
                                        @Html.TextBoxFor(m => m.ExamDetails.choiceB, new { @class = "form-control", id = "view_cB" })
                                    </div>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text">C:</span>
                                        @Html.TextBoxFor(m => m.ExamDetails.choiceC, new { @class = "form-control", id = "view_cC" })
                                    </div>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text">D:</span>
                                        @Html.TextBoxFor(m => m.ExamDetails.choiceD, new { @class = "form-control", id = "view_cD" })
                                    </div>
                                    <div class="input-group">
                                        <span class="input-group-text">Answer:</span>
                                        <select asp-for="ExamDetails.ChoiceAnswer" class="form-select" id="view_cAnswer">
                                            <option value=""></option>
                                            <option value="A">A</option>
                                            <option value="B">B</option>
                                            <option value="C">C</option>
                                            <option value="D">D</option>
                                        </select>
                                    </div>
                                </div> 
                    }
                 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success">
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
}




@*MODAL DELETE QUESTIONS*@
@using (Html.BeginForm("DeleteQuestion", "Question", FormMethod.Post))
{

    <div class="modal modal-blur fade" id="ModalDelete" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-status bg-danger"></div>
                <div class="modal-body text-center py-4">
                    <!-- Download SVG icon from http://tabler-icons.io/i/alert-triangle -->
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon mb-2 text-danger icon-lg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" /><path d="M12 9v4" /><path d="M12 17h.01" /></svg>
                    <h3>Delete Training?</h3>
                    @Html.HiddenFor(m => m.ExamDetails.ExamId, new { @id = "WId", @name = "ExamId" })
                    @Html.HiddenFor(m => m.Id)
                    <div class="text-muted">Do you really want to delete this Training? This process cannot be undone.</div>
                </div>
                <div class="modal-footer">
                    <div class="w-100">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn w-100" data-bs-dismiss="modal">
                                    Cancel
                                </button>
                            </div>
                            <div class="col">
                                <button class="btnDeleteAsset btn btn-danger w-100">
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}






@*MODAL Practical ADD QUESTIONS*@
@using (Html.BeginForm("SavePracQuestion", "Question", FormMethod.Post, new { id = "form-Add-PracQuestion" }))
{

    <div class="modal modal-blur fade" id="modal-PracQuestion" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">ENTER QUESTION</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="row g-2 align-items-center">
                        <div class="col-6">
                            <h3>Fill Up Information</h3>
                        </div>
                    </div>


                    <div class="mb-3">

                        <label class="form-label">Number:</label>
                        @Html.TextBoxFor(m => m.ExamDetails.ItemNo, new { @type = "number", @class = "form-control" })

                    </div>


                    <div class="mb-3">
                        <label class="form-label">Question:</label>
                        @Html.TextAreaFor(m => m.ExamDetails.Question, new { @type = "text", @class = "form-control", @rows = "6" })
                    </div>



                </div>

                @Html.HiddenFor(m => m.ExamDetails.Id, new { @id = "pdi" })

                <div class="modal-footer">
                    <button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
                    <a class="btn btn-success" id="btnPracQuestionSave" data-pracid="@Model.Id">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M5 12l5 5l10 -10" /></svg>
                        Save
                    </a>
                </div>
            </div>
        </div>
    </div>


}








@using (Html.BeginForm("Finalized", "Question", FormMethod.Post, new { id = "form-Final-Exam" }))
{
    <div class="modal modal-blur fade" id="ModalFinal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-status bg-warning"></div>
                <div class="modal-body text-center py-4">
                    <!-- Download SVG icon from http://tabler-icons.io/i/alert-triangle -->
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon mb-2 text-warning icon-lg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" /><path d="M12 9v4" /><path d="M12 17h.01" /></svg>
                    <h3>Finalized Training?</h3>

                    @Html.HiddenFor(m => m.Title)
                    @Html.HiddenFor(m => m.Id)
                    <div class="text-muted">Do you really want to finalize this Training?</div>
                </div>
                <div class="modal-footer">
                    <div class="w-100">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn w-100" data-bs-dismiss="modal">
                                    No
                                </button>
                            </div>
                            <div class="col">
                                <button class="btnFinal btn btn-warning w-100">
                                    Yes
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}




@using (Html.BeginForm("Revise", "Question", FormMethod.Post, new { id = "form-Revise-Exam" }))
{
    <div class="modal modal-blur fade" id="ModalRevise" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-status bg-rss"></div>
                <div class="modal-body text-center py-4">
                    <!-- Download SVG icon from http://tabler-icons.io/i/alert-triangle -->
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon mb-2 text-warning icon-lg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" />
                        <path d="M12 9v4" />
                        <path d="M12 17h.01" />
                    </svg>
                    <h3 id="ModalFinalLabel">Finalize Training?</h3>

                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.IsWritten)
                    <div class="text-muted">Do you really want to finalize this Training?</div>
                </div>
                <div class="modal-footer">
                    <div class="w-100">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn w-100" data-bs-dismiss="modal">
                                    No
                                </button>
                            </div>
                            <div class="col">
                                <button class="btnRevise btn btn-warning w-100">
                                    Yes
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}






@section Scripts {






    <script>
        $("#btnEditExam").click(function () {
            $("#form-Edit-Exam").submit()
        })

        $(".btnFinal").click(function () {
            $("#form-Final-Exam").submit()
        })

        $(".btnRevise").click(function () {
            $("#form-Revise-Exam").submit()
        })


        $("#btnQuestionSave").click(function () {
            const id = $(this).data("did")
            $("#edi").val(id)

            $("#form-Add-Question").submit()
        })


        $("#btnPracQuestionSave").click(function () {
            const id = $(this).data("pracid")
            $("#pdi").val(id)

            $("#form-Add-PracQuestion").submit()
        })


        $("#btnQuestionSaveEdit").click(function () {
            $("#form-Edit-Question").submit()
        })


        $(".editQuestion").click(function () {
            const wId = $(this).data("wid");
            const tId = $(this).data("tid");
            const ptId = $(this).data("ptid");
            const INo = $(this).data("ino");
            const Quest = $(this).data("quest");
            const cA = $(this).data("ca");
            const cB = $(this).data("cb");
            const cC = $(this).data("cc");
            const cD = $(this).data("cd");
            const eAnswer = $(this).data("eanswer");
            const tAnswer = $(this).data("tanswer");
            const cAnswer = $(this).data("canswer");
            const type = $(this).data("type");
            const subid = $(this).data("subid");


            // Populate fields
            $("#view_PEID").val(ptId);
            $("#view_ID").val(wId);
            $("#view_EID").val(tId);
            $("#view_INo").val(INo);
            $("#view_Quest").val(Quest);
            $("#view_cA").val(cA);
            $("#view_cB").val(cB);
            $("#view_cC").val(cC);
            $("#view_cD").val(cD);
            $("#view_eAnswer").val(eAnswer);
            $("#view_tAnswer").val(tAnswer);
            $("#view_cAnswer").val(cAnswer);

            // Set value and trigger change event to show the appropriate section
            $("#u_subTypeSelector").val(subid).trigger("change");
        });

        // Change event handler for subTypeSelector
        $(document).ready(function () {
            $('#u_subTypeSelector').on('change', function () {
                const subid = $(this).val(); // Get the selected value

                // Hide all sections
                $("#u_enumarationSection, #u_choicesSection, #u_trueFalseSection, #u_identificationSection").hide();

                // Show the appropriate section based on the selected value
                if (subid === '1') {
                    $("#u_enumarationSection").show();
                } else if (subid === '2') {
                    $("#u_choicesSection").show();
                } else if (subid === '3') {
                    $("#u_trueFalseSection").show();
                }
                else if (subid === '4') {
                    $("#u_identificationSection").show();
                }
            });
        });

        $(".btn_delete").click(function () {
            const id = $(this).data("wid")
            $("#WId").val(id)

        })


        $(document).ready(function () {
            $('#passingScore').on('input', function () {
                var value = parseInt($(this).val());

                // Enforce minimum value of 0
                if (value < 0) {
                    $(this).val(0);
                }

                // Enforce maximum value of 100
                if (value > 100) {
                    $(this).val(100);
                }
            });
        });

        $(document).ready(function () {
            $('#subTypeSelector').on('change', function () {
                const selectedType = $(this).val();

                // Hide all sections initially
                $('#enumarationSection, #trueFalseSection, #choicesSection, #identificationSection').hide();

                // Show the corresponding section based on the selected SubType
                if (selectedType === '1') { // Enumaration
                    $('#enumarationSection').show();
                } else if (selectedType === '2') { // Choices
                    $('#choicesSection').show();
                } else if (selectedType === '3') { // True or False
                    $('#trueFalseSection').show();
                }
                else if (selectedType === '4') { // True or False
                    $('#identificationSection').show();
                }
            });
        });




        // $(document).ready(function () {
        //     // Hide or show PassingScore based on the selected option
        //     function togglePassingScore() {
        //         if ($('#isWritten').is(':checked')) {
        //             $('#passingScoreDiv').show();  // Show PassingScore when "Written" is selected
        //             $('#passingScore').prop('readonly', false); // Enable PassingScore input
        //         } else {
        //             $('#passingScoreDiv').hide();  // Hide PassingScore when "Practical" is selected
        //         }
        //     }

        //     // Initial check on page load
        //     togglePassingScore();

        //     // Check on radio button change
        //     $('input[name="IsWritten"]').change(function () {
        //         togglePassingScore();
        //     });

        //     // Ensure only numeric input for PassingScore
        //     $('#passingScore').on('input', function () {
        //         this.value = this.value.replace(/[^0-9]/g, ''); // Allow only numbers
        //     });
        // });

    </script>






}